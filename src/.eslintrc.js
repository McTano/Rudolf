module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 2018,
    project: './tsconfig.json',
    sourceType: 'module',
    ecmaFeatures: {
      modules: true,
      jsx: true,
    },
  },
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx', '.json'],
      },
    },
  },
  plugins: ['@typescript-eslint'],
  globals: {
    $: true,
    $$: true,
  },
  extends: [
    'plugin:promise/recommended',
    'plugin:react/recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'prettier/@typescript-eslint',
    'prettier/react',
  ],
  root: true,
  env: {
    es6: true,
    browser: true,
    node: true,
  },
  rules: {
    // 'react/prop-types': 'off',
    // 'no-underscore-dangle': 'off',
    // 'no-unused-expressions': ['error', { allowTernary: true }],
    // 'react/jsx-filename-extension': ['error', { extensions: ['.js', '.jsx', '.tsx'] }],
    // 'promise/prefer-await-to-callbacks': 'warn',
    // 'promise/prefer-await-to-then': 'warn',
    // 'implicit-arrow-linebreak': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    // '@typescript-eslint/explicit-member-accessibility': 'off',
    // '@typescript-eslint/no-explicit-any': 'off',
    // '@typescript-eslint/type-annotation-spacing': 'off',
    // '@typescript-eslint/member-delimiter-style': 'off',
    // '@typescript-eslint/no-object-literal-type-assertion': 'off',
    // 'no-console': 'off',
    // 'import/prefer-default-export': 'off',
    // 'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],
    '@typescript-eslint/no-unnecessary-type-assertion': 'error',
    '@typescript-eslint/prefer-includes': 'error',
    '@typescript-eslint/promise-function-async': 'error',
    '@typescript-eslint/restrict-plus-operands': 'error',
    '@typescript-eslint/unbound-method': 'warn',
    '@typescript-eslint/prefer-includes': 'error',
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/no-useless-constructor': 'error',
    '@typescript-eslint/no-for-in-array': 'error',
    '@typescript-eslint/await-thenable': 'error',
    '@typescript-eslint/prefer-interface': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
  },
}
